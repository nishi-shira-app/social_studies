{"version":3,"sources":["context/SocialStudiesData.ts","lib/EnglishVoice.ts","components/WordPage/Word.tsx","components/Pagination.tsx","components/Common/Favorite.tsx","components/SideMenu.tsx","pages/WordPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SocialStudiesData","currentYear","words","axios","get","then","response","Array","isArray","data","values","responseWords","shift","forEach","w","undefined","push","id","part","question","precautions","answer","notices","sessionStorage","setItem","JSON","stringify","catch","storageWords","getItem","length","parse","favorite","localStorage","sWords","f","s","filter","this","getWordData","reduce","val","cur","includes","console","log","year","category","sentence","sentenceTrans","some","v","EnglishVoice","text","lang","rate","voice","window","speechSynthesis","getVoices","utter","SpeechSynthesisUtterance","speak","Word","props","wordInputElement","React","current","focus","style","display","width","height","className","Container","maxWidth","Grid","container","item","xs","Typography","variant","visibleWord","direction","TextField","inputRef","error","isInputWordCompleted","label","fullWidth","value","inputWordString","onChange","o","changeInputWord","target","toLowerCase","changeInputWordCompleted","onClick","speech","spacing","justifyContent","alignItems","Button","color","Pagination","size","onClickPrev","disabled","index","isViewPrev","onClickNext","maxPage","isViewNext","Favorite","useState","isFavorite","setIsFavorite","checkIsFavorite","a","setFavorite","isF","concat","useEffect","isFa","SideMenu","menuToggle","setMenuToggle","listOpen","setListOpen","categories","parts","drawerWidth","vals","c","currentPart","PREFIX","classes","header","open","close","closeIcon","hide","list","changeCategoryMenu","styled","theme","backgroundColor","marginBottom","marginTop","marginLeft","paddingLeft","splice","Toolbar","noWrap","flexGrow","textAlign","IconButton","aria-label","edge","Drawer","anchor","onClose","List","component","map","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","p","i","changeCurrentPart","replaceAll","trim","ListItemIcon","Divider","Slider","min","max","step","speechSpeedRate","aria-labelledby","valueLabelDisplay","e","changeSpeechSpeedRate","WordPage","firstPart","getFirstPart","wIndex","Number","slides","setSlides","wordIndex","setWordIndex","setCurrentPart","setVisibleWord","setVisiblePlural","setVisibleSentence","setIsInputWordCompleted","setInputWordString","setInputPluralString","setSpeechSpeedRate","slidePrev","newIndex","toString","slideNext","getFavoriteWordData","swipeHandles","useSwipeable","onSwipedLeft","absX","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","getParts","App","sPage","state","currentPage","isLoaded","setWordData","setState","createTheme","palette","main","colors","mode","ThemeProvider","CssBaseline","verticalAlign","CircularProgress","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5afbde6d.chunk.js","sourcesContent":["import axios from \"axios\";\n\ntype sentenceType = {\n  id: string,\n  year: string,\n  category: string,\n  part: string,\n  sentence: string,\n  sentenceTrans: string,\n}\n\ntype wordType = {\n  id: string,\n  part: string,\n  question: string,\n  precautions: string,\n  answer: string,\n  notices: string,\n}\n\nexport default class SocialStudiesData {\n  static setWordData(currentYear?:string) {\n    const sheetId = '1zpWEP0dGEm0SMkGO8Et3Wo8TqwNCKOl_kfRTVZgRJbw';\n    const sheetName = 'csv';\n    const apiKey = 'AIzaSyD61LRLY0MGuJyIU9EQCb4KUDiFJRmxO1o';\n    const words:wordType[] = [];\n    return axios\n    .get('https://sheets.googleapis.com/v4/spreadsheets/'+sheetId+'/values/'+sheetName+'?key='+apiKey)\n    .then(response => {\n      if (!Array.isArray(response.data.values)) {\n        return words;\n      }\n      const responseWords = response.data.values;\n      responseWords.shift();\n      responseWords.forEach((w: any) => {\n        if (currentYear!==undefined && currentYear !== w[1]) {\n          return;\n        }\n        words.push({\n          id: w[0],\n          part: w[1],\n          question: w[2],\n          precautions: w[3],\n          answer: w[4],\n          notices: w[5],\n        })\n      })\n      sessionStorage.setItem('WORDS', JSON.stringify(words));\n    })\n    .catch(() => words);\n  }\n\n  static getWordData() {\n    const storageWords = sessionStorage.getItem('WORDS');\n    const words:wordType[] = [];\n    if (storageWords != null && storageWords.length > 0) {\n      JSON.parse(storageWords).forEach((w:any) => {\n        words.push({\n          id: w['id'],\n          part: w['part'],\n          question: w['question'],\n          precautions: w['precautions'],\n          answer: w['answer'],\n          notices: w['notices'],\n        })\n      });\n    }\n    return words;\n  }\n\n  static getFavoriteWordData()\n  {\n    let words:wordType[] = [];\n    let favorite = JSON.parse(localStorage.getItem('favorite') ?? '{}');\n    const sWords = sessionStorage.getItem('WORDS');\n    let storageWords:any = [];\n    if (sWords != null && sWords.length > 0) {\n      storageWords = JSON.parse(sWords);\n    } else {\n      return words;\n    }\n    if (Array.isArray(favorite)) {\n      favorite.forEach(f => {\n        if (f['category'] === 'Word') {\n          const s:any = storageWords.filter((s:any) => s['id'] === f['id']);\n          if (s.length > 0) {\n            words.push(\n              {\n                id: s[0]['id'],\n                part: s[0]['part'],\n                question: s[0]['question'],\n                precautions: s[0]['precautions'],\n                answer: s[0]['answer'],\n                notices: s[0]['notices'],\n              }\n            );\n          }\n        }\n      });\n    }\n    return words;\n  }\n\n  static getFirstPart() {\n    return this.getWordData().reduce((val:string[], cur:any) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, [])[0];\n  }\n\n  static getParts() {\n    return this.getWordData().reduce((val:string[], cur:any) => {\n      if (!val.includes(cur.part)) {\n        val.push(cur.part);\n      }\n      return val;\n    }, []);  \n  }\n\n  static getYears() {\n    console.log(this.getWordData())\n    return this.getWordData().reduce((val:string[], cur:any) => {\n      if (!val.includes(cur.year)) {\n        val.push(cur.year);\n      }\n      return val;\n    }, []);\n  }\n\n  static getSentences() {\n    return this.getWordData().reduce((val:sentenceType[], cur:any) => {\n      const w:sentenceType = {\n        id: cur.id,\n        year: cur.year,\n        category: cur.category,\n        part: cur.part,\n        sentence: cur.sentence, \n        sentenceTrans: cur.sentenceTrans\n      };\n\n      if (!val.some(v => \n        v.part === w.part && v.sentence === w.sentence)) {\n        val.push(w);\n      }\n      return val;\n    }, []);  \n  }\n}\n","class EnglishVoice {\n  static speech(text:string, lang: string, rate: number) {\n    const synth = window.speechSynthesis;\n    const voices = synth.getVoices().filter(voice => voice.lang === lang);\n    const voice = voices[0];\n    const utter = new SpeechSynthesisUtterance();\n    utter.text = text;\n    utter.lang = lang;\n    utter.voice = voice;\n    utter.rate = rate;\n    window.speechSynthesis.speak(utter);\n  }\n}\n\nexport default EnglishVoice;","import * as React from 'react';\nimport { Container, Button, Grid, Typography, TextField, Avatar } from '@mui/material';\nimport EnglishVoice from '../../lib/EnglishVoice';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport TranslateIcon from '@mui/icons-material/Translate';\nimport 'fontsource-roboto';\n\ninterface WordProps {\n  question: string;\n  precautions: string;\n  answer: string;\n  notices: string;\n  visibleWord: string;\n  isInputWordCompleted: boolean;\n  inputWordString:string;\n  onClick: () => void;\n  changeInputWordCompleted: (val:boolean) => void;\n  changeInputWord: (val:string) => void;    \n}\n\nclass Word extends React.Component<WordProps, {}>{\n  private wordInputElement: React.RefObject<HTMLInputElement>;\n  constructor(props: WordProps) {\n    super(props);\n    this.wordInputElement = React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.wordInputElement.current?.focus();\n  }\n\n  componentDidMount() {\n    this.wordInputElement.current?.focus();\n  }\n\n  render () {\n    const style: React.CSSProperties = {\n      display: 'inline-block',\n      width: '100%',\n      height: '20%',\n    }\n\n    return (\n      <div className=\"word-wrap\">\n        <Container maxWidth=\"sm\">\n          <Grid container>\n            <Grid item xs={10}>\n              <Typography variant='subtitle1'>\n                {this.props.question}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Typography variant='h4' className={this.props.visibleWord}>\n            {this.props.answer}\n          </Typography>\n          <br/>\n          <Grid container direction=\"row\">\n            <TextField\n              inputRef={this.wordInputElement}\n              error={!this.props.isInputWordCompleted}\n              label= {this.props.isInputWordCompleted ? \"OK\" : \"input word\"}\n              fullWidth={true}\n              value={this.props.inputWordString}\n              variant=\"outlined\"\n              onChange={(o) => \n                {\n                  this.props.changeInputWord(o.target.value.toLowerCase());\n                  if (this.props.answer.toLowerCase() === o.target.value.toLowerCase()) {\n                    this.props.changeInputWordCompleted(true);\n                    this.props.onClick();\n                    EnglishVoice.speech('OK. ' + this.props.answer, 'en-US', 1);\n                  } else {\n                    this.props.changeInputWordCompleted(false);\n                  }\n                }\n              }\n            />\n          </Grid>\n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            spacing={5}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={() => {\n                  this.props.onClick()\n                  this.wordInputElement.current?.focus();\n                }}\n                >\n                  <TranslateIcon/>\n              </Button>\n            </Grid>\n            <Grid item xs={5}>\n              <Button\n                style={style}\n                variant=\"outlined\"\n                onClick={() => {\n                  EnglishVoice.speech(this.props.answer, 'en-US', 1);\n                  this.wordInputElement.current?.focus();\n                }}\n              >\n                <VolumeUpIcon/>\n              </Button>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Word;","import * as React from 'react';\nimport { Button, Grid } from '@mui/material';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\nimport 'fontsource-roboto';\n\ninterface PaginationProps {\n  index: number;\n  maxPage: number;\n  isViewPrev: boolean;\n  isViewNext: boolean;\n  onClickPrev: () => void;\n  onClickNext: () => void;\n} \nconst Pagination: React.FC<PaginationProps> = (props) => {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justifyContent=\"space-around\"\n      alignItems=\"flex-end\"\n    >\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => props.onClickPrev()}\n        disabled={props.index === 0 || !props.isViewPrev ? true : false}\n      >\n        <ArrowBackIosIcon />\n      </Button> \n      <Button \n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => props.onClickNext()}\n        disabled={props.index >= props.maxPage-1 || !props.isViewNext ? true : false}\n      >\n        <ArrowForwardIosIcon />\n      </Button>\n    </Grid>\n  );\n}\n\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport { Button, Grid } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\nimport 'fontsource-roboto';\n\ninterface FavoriteProps {\n    category: 'Grammer'|'Word'|'GrammerWriting';\n    part: string;\n    id: string;\n}\n\nexport default function Favorite(props:FavoriteProps) {\n    const [isFavorite, setIsFavorite] = useState<boolean>(false);\n    const [id, setId] = useState<string>(props.id);\n\n    const checkIsFavorite = async () => {\n        let favorite:any = [];\n        favorite = await JSON.parse(localStorage.getItem('favorite') ?? '{}');\n        if (Array.isArray(favorite)) {\n            return favorite.filter(f => f['category'] === props.category && f['id'] === props.id).length > 0;\n        } else {\n            return false;\n        }\n    }\n\n    const setFavorite = async () => {\n        let favorite = await JSON.parse(localStorage.getItem('favorite') ?? '{}');\n        if (Array.isArray(favorite)) {\n            await checkIsFavorite()\n            .then((isF:any) => {\n                if (isF) {\n                    favorite = favorite.filter((f:any) => f['category'] !== props.category || f['id'] !== props.id);\n                    setIsFavorite(false);\n                } else {\n                    favorite = favorite.concat(props);\n                    setIsFavorite(true);\n                }\n                localStorage.setItem('favorite', JSON.stringify(favorite));\n            });\n        } else {\n            setIsFavorite(true);\n            localStorage.setItem('favorite', JSON.stringify([props]));\n        }\n    }\n\n    useEffect(() => {\n        checkIsFavorite()\n        .then((isFa:boolean) => {\n            setIsFavorite(isFa);\n        })\n    })\n\n    return (\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"small\"\n            onClick={setFavorite}\n        >\n        {\n            isFavorite ? <StarIcon /> : <StarBorderIcon />\n        }\n        </Button>\n    )\n\n}\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Drawer, IconButton, List, ListItem, Collapse, Slider } from '@mui/material';\nimport { styled, Theme, createStyles } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { AppBar, Toolbar } from '@mui/material';\nimport { ListItemText, ListItemIcon } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport CheckIcon from '@mui/icons-material/Check';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport Divider from '@mui/material/Divider';\nimport { VerticalSplitSharp } from '@mui/icons-material';\n\ntype categoryType = {\n  category: string;\n  parts: string[];\n}\ninterface SideMenuProps {\n  categories: categoryType[]|null;\n  parts: string[];\n  currentPart: string;\n  changeCurrentPart: (val:string) => void;\n  speechSpeedRate: number;\n  changeSpeechSpeedRate: (val:number) => void;\n}\n\nconst SideMenu: React.FC<SideMenuProps> = props => {\n  const [menuToggle, setMenuToggle] = useState(false);\n  const [listOpen, setListOpen] = useState<boolean[]>([]);\n\n  const toggleDrawer = () => {\n    setMenuToggle(!menuToggle);\n  };\n\n  const categories:categoryType[] | null = props.categories;\n  const parts = props.parts;\n  const drawerWidth = '70vw';\n\n  useEffect(() => {\n    if (categories) {\n      let vals:boolean[] = [];\n      categories.forEach(c => {\n        if (c.parts.includes(props.currentPart)) {\n          vals.push(true);\n        } else {\n          vals.push(false);\n        }\n      })\n      setListOpen(vals);\n    }\n  },[]);\n\n  const PREFIX = 'MyCard';\n  const classes = {\n    header: `${PREFIX}-header`,\n    open: `${PREFIX}-open`,\n    close: `${PREFIX}-close`,\n    closeIcon: `${PREFIX}-closeIcon`,\n    hide: `${PREFIX}-hide`,\n    list: `${PREFIX}-list`,\n    categories: `${PREFIX}-categories`,\n    parts: `${PREFIX}-parts`,\n  }\n  \n  const Root = styled('div')((theme: Theme) => ({\n    [`&.${classes.header}`]: {\n      height:'4vh',\n      backgroundColor: '#7A7A7A',\n      marginBottom: '1vh'\n    },\n    [`&.${classes.open}`]: {\n      width: drawerWidth,\n    },\n    [`&.${classes.close}`]: {\n      width:'100%',\n    },\n    [`&.${classes.closeIcon}`]: {\n      marginTop: '16px',\n      marginLeft: '16px',\n    },\n    [`&.${classes.hide}`]: {\n      display: 'none',\n    },\n    [`&.${classes.list}`]: {\n      width: drawerWidth,\n    },\n    [`&.${classes.categories}`]: {\n      backgroundColor: '#333',\n    },\n    [`&.${classes.parts}`]: {\n      paddingLeft: '2em',\n    },\n  }))\n\n  const changeCategoryMenu = ((index:number|null) => {\n    let vals:boolean[] = [];\n    listOpen.forEach(c => {\n      vals.push(false);\n    })\n    if (index !== null) {\n      vals.splice(index, 1, true);\n    }\n    setListOpen(vals);\n  });\n\n  return ( \n    <>\n      <Toolbar\n        className={`${menuToggle ? classes.open : classes.close} ${classes.header}` }\n      >\n        <Typography\n          variant=\"h6\"\n          noWrap\n          style={{flexGrow: 1, textAlign:'center'}}\n        >\n          {props.currentPart}    \n        </Typography>\n        <IconButton\n          color=\"inherit\"\n          className={menuToggle ? classes.hide : ''}\n          aria-label=\"open drawer\"\n          edge=\"end\"\n          onClick={() => toggleDrawer()}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Toolbar>\n      <Drawer\n        anchor='right'\n        open={menuToggle}\n        onClose={() => setMenuToggle(false)}\n      >\n        <div className={classes.list}>\n          <CloseIcon\n            className={classes.closeIcon}\n            onClick={() => setMenuToggle(false)}\n          />\n          <List key={'menuList'} component=\"nav\" aria-label=\"secondary part\">\n            {\n              categories\n              &&\n              categories.map((c, index) => {\n                return (\n                  <div key={'categoryWrapper'+index}>\n                    <ListItem\n                      key={'category'+index}\n                      className={classes.categories}\n                      button\n                      onClick={() => {\n                        if (listOpen[index]) {\n                          changeCategoryMenu(null);\n                        } else {\n                          changeCategoryMenu(index);\n                        }\n                      }}\n                    >\n                      <ListItemText key={'categoryText'} primary={c.category}/>\n                      {listOpen[index] ? <ExpandLess /> : <ExpandMore />}\n                    </ListItem>\n                    <Collapse key={'subMenu'+index} in={listOpen[index]} timeout=\"auto\" unmountOnExit>\n                      <List key={'subMenuList'+index} component=\"div\" disablePadding>\n                        {\n                          c.parts.map((p, i) => \n                            <ListItem \n                              key={'subMenu'+index+p+i}\n                              button\n                              className={classes.parts}\n                              onClick={() => {\n                                props.changeCurrentPart(p);\n                                setMenuToggle(false);\n                                changeCategoryMenu(index);\n                              }}\n                                        \n                            >\n                              <ListItemText key={'subMenuText'+index+p+i} primary={p.replaceAll(c.category, '').trim()}/>\n                              <ListItemIcon key={'subMenuIcon'+index+p+i}>\n                                {\n                                  p === props.currentPart\n                                  &&\n                                  <CheckIcon />\n                                }\n                              </ListItemIcon>\n                            </ListItem>\n                          )\n                        }\n                      </List>\n                    </Collapse>\n                  </div>\n                )\n              })\n            }\n            {\n              !categories && parts\n              &&\n              parts.map(p => {\n                return (\n                  <ListItem \n                    button\n                    onClick={() => {\n                      props.changeCurrentPart(p);\n                      setMenuToggle(false);\n                    }}\n                    key={p}\n                  >\n                    <ListItemText primary={p}/>\n                    <ListItemIcon>\n                      {\n                        p === props.currentPart\n                        &&\n                        <CheckIcon />\n                      }\n                    </ListItemIcon>\n                  </ListItem>\n                )\n              })\n            }\n            <ListItem\n              button\n              onClick={() => {\n                props.changeCurrentPart('favorite');\n                setMenuToggle(false);\n              }}\n              key={'favorite'}\n            >\n              <ListItemText primary=\"favorite\"/>\n            </ListItem>\n          </List>\n          <Divider />\n          <List key={'voiceSpeedList'} component=\"nav\" aria-label=\"thirdry speechSpeed\">\n            <ListItem key={'voiceSpeedListItem'}>\n              <ListItemText primary=\"voice speed\"/>\n              <Slider\n                min={0.1}\n                max={1}\n                step={0.1}\n                value={props.speechSpeedRate}\n                aria-labelledby=\"speech-speed-rate\"\n                valueLabelDisplay=\"auto\"\n                onChange={(e, v) => {\n                  let rate:number = props.speechSpeedRate;\n                  if (typeof(v) ===  'number') {\n                    rate = v;\n                  }\n                  props.changeSpeechSpeedRate(rate);\n                }}\n              />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideMenu;","import React, { useState, useEffect } from 'react';\nimport { Container } from '@mui/material';\nimport SocialStudiesData from '../context/SocialStudiesData';\nimport Word from '../components/WordPage/Word';\nimport Plural from '../components/WordPage/Plural'\nimport Paginate from '../components/Pagination';\nimport Favorite from '../components/Common/Favorite';\nimport SideMenu from '../components/SideMenu';\nimport { useSwipeable } from \"react-swipeable\";\n\nconst WordPage: React.FC<{}> = () => {\n  const firstPart = localStorage.getItem('wordCurrentPart') ?? SocialStudiesData.getFirstPart();\n  const wIndex: number = localStorage.getItem('wordWordIndex') ? Number(localStorage.getItem('wordWordIndex')) : 0;\n  const [slides, setSlides] = useState(SocialStudiesData.getWordData().filter(w => w.part === firstPart));\n  const [wordIndex, setWordIndex] = useState<number>(wIndex);\n  const [currentPart, setCurrentPart] = useState<string>(firstPart);\n  const [visibleWord, setVisibleWord] = useState<string>('word-hidden');\n  const [visiblePlural, setVisiblePlural] = useState<string>('word-hidden');\n  const [visibleSentence, setVisibleSentence] = useState<string>('word-hidden');\n  const [isInputWordCompleted, setIsInputWordCompleted] = useState<boolean>(false);\n  const [isInputPluralCompleted, setIsInputPluralCompleted] = useState<boolean>(false);\n  const [inputWordString, setInputWordString] = useState<string>('');\n  const [inputPluralString, setInputPluralString] = useState<string>('');\n  const [speechSpeedRate, setSpeechSpeedRate] = useState<number>(0.8);\n\n  const slidePrev = () => {\n    if (wordIndex > 0) {\n      setVisibleWord('word-hidden');\n      setVisiblePlural('word-hidden');\n      setVisibleSentence('word-hidden');\n      setIsInputWordCompleted(false);\n      setInputWordString('');\n      setInputPluralString('');\n      const newIndex = wordIndex-1\n      setWordIndex(newIndex);\n      localStorage.setItem('wordWordIndex', newIndex.toString());\n    }\n  }\n  \n  const slideNext = () => {\n    if (wordIndex < slides.length-1) {\n      setVisibleWord('word-hidden');\n      setVisiblePlural('word-hidden');\n      setVisibleSentence('word-hidden');\n      setIsInputWordCompleted(false);\n      setInputWordString('');\n      setInputPluralString('');\n      const newIndex = wordIndex+1;\n      setWordIndex(newIndex);\n      localStorage.setItem('wordWordIndex', newIndex.toString());\n    }\n  }\n\n  const changeInputWordCompleted = (val: boolean) => {\n    setIsInputWordCompleted(val);\n  }\n\n  const changeInputPluralCompleted = (val:boolean) => {\n    setIsInputPluralCompleted(val);\n  }\n\n  const changeInputWord = (val: string) => {\n    setInputWordString(val);\n  }\n\n  const changeInputPlural = (val: string) => {\n    setInputPluralString(val);\n  }\n\n  const changeCurrentPart = async (val: string) => {\n    let s:any = [];\n    if (currentPart !== val) {\n      if (val === 'favorite') {\n        s = await SocialStudiesData.getFavoriteWordData();\n      } else {\n        s = await SocialStudiesData.getWordData().filter(w => w.part === val);\n      }\n      setWordIndex(0);\n      setSlides(s);\n      setCurrentPart(val);\n      setVisibleWord('word-hidden');\n      setVisibleSentence('word-hidden');\n      setIsInputWordCompleted(false);\n      setInputWordString('');\n      setInputPluralString('');\n      localStorage.setItem('wordCurrentPart', val);\n      localStorage.setItem('wordWordIndex', '0');\n    }\n  }\n\n  const changeSpeechSpeedRate = (val: number) => {\n    setSpeechSpeedRate(val);\n  }\n\n  const swipeHandles = useSwipeable({\n    onSwipedLeft: (e) => {\n      if (e.absX >= 140 ) {\n        slideNext();\n      }\n    },\n    onSwipedRight: (e) => {\n      if (e.absX >= 140) {\n        slidePrev();\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true\n  });\n\n  useEffect(() => {\n    changeCurrentPart(firstPart);\n  }, []);\n\n  return (\n    <>\n      {\n        currentPart\n        &&\n        <SideMenu\n          categories={null}\n          parts={SocialStudiesData.getParts()}\n          currentPart={currentPart}\n          changeCurrentPart={(val) => changeCurrentPart(val)}\n          speechSpeedRate={speechSpeedRate}\n          changeSpeechSpeedRate={(val) => changeSpeechSpeedRate(val)}\n        />\n      }\n      <Container maxWidth=\"sm\">\n        <Paginate\n          index={wordIndex}\n          maxPage={slides.length}\n          isViewPrev={true}\n          isViewNext={true}\n          onClickPrev={slidePrev}\n          onClickNext={slideNext}\n        />\n        <hr/>\n        {\n          slides.length == 0\n          &&\n          <p>no data</p>\n        }\n        {\n          slides.length > 0\n          &&\n          <>\n            <div {...swipeHandles}>\n              <Word\n                question={slides[wordIndex].question}\n                precautions={slides[wordIndex].precautions}\n                answer={slides[wordIndex].answer}\n                notices={slides[wordIndex].notices}\n                visibleWord = {visibleWord}\n                isInputWordCompleted={isInputWordCompleted}\n                inputWordString={inputWordString}\n                onClick={() => setVisibleWord('word-visible')}\n                changeInputWordCompleted={(val) => changeInputWordCompleted(val)}\n                changeInputWord={(val) => changeInputWord(val)}\n              />\n            </div>\n            <hr/>\n            <div style={{textAlign:'center'}}>\n              <Favorite \n                category='Word'\n                part={currentPart}\n                id={slides[wordIndex].id}\n              />\n            </div>\n          </>\n        }\n      </Container>\n    </>\n  )\n} \n\nexport default WordPage;","import React from 'react';\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport * as colors from \"@mui/material/colors\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport 'fontsource-roboto';\nimport WordPage from './pages/WordPage';\nimport SocialStudiesData from './context/SocialStudiesData';\n\ninterface AppProps {\n}\n\ninterface AppState {\n  currentYear: string,\n  currentPage: pageNames,\n  isLoaded: number,\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    let sPage:pageNames = 'WordPage';\n    switch (localStorage.getItem('currentPage')) {\n      case 'WordPage':  sPage = 'WordPage';\n            break;\n      case 'GrammerPage': sPage = 'GrammerPage';\n            break;\n      case 'WordGrammerPage': sPage = 'WordGrammerPage';\n            break;\n      case 'WordTransPage': sPage = 'WordTransPage';\n            break;\n      case 'GrammerWritingPage': sPage = 'GrammerWritingPage';\n            break;\n      case 'GrammerWritingTestPage': sPage = 'GrammerWritingTestPage';\n            break;\n      default: sPage = 'WordPage';\n    }\n    this.state = {\n      currentYear: '',\n      currentPage: sPage,\n      isLoaded: 0,\n    }\n  }\n\n  async componentDidMount() {\n    await SocialStudiesData.setWordData();\n    await this.setState({isLoaded: 1});\n  }\n\n  render () {\n    const theme = createTheme({\n      palette: {\n        primary: {\n          main: colors.blue[800],\n        },\n        mode: 'dark',\n      },\n    });\n\n    const changePage = async (val: pageNames) => {\n      this.setState({\n        currentPage: val\n      })\n      await SocialStudiesData.setWordData(this.state.currentYear);\n    }\n\n    const changeCureentYear = async (year: string) => {\n      await SocialStudiesData.setWordData(year);\n      await this.setState({\n        currentYear: year,\n        isLoaded: 2\n      })\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {\n          this.state.isLoaded === 0\n          &&\n          <>\n            <div style={\n              {\n                height: '100vh',\n                width: '100vw',\n                display: 'table-cell',\n                verticalAlign: 'middle',\n                textAlign: 'center'\n              }\n            }>\n              <CircularProgress />\n              <p>now loading...</p>\n            </div>\n            </>\n          }\n        {\n          this.state.isLoaded === 1\n          &&\n          <>\n          {\n            this.state.currentPage === 'WordPage'\n            &&\n            <WordPage />\n          }\n          </>\n        }\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}